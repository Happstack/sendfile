  sendfile-0.6
--------------------------------------------------------------------------------
  * API functions now take FilePath instead of Handle as source arguement. This
    seems like the only sensible way to do things for the new IO system in 
    GHC 6.12. Sorry about the breakage.
  * Added support for GHC 6.12.x
  * Added support for OS X (contributed by Douglas Burke)

  sendfile-0.5
--------------------------------------------------------------------------------
  * Code simplification / beautification
  * Fixed a bug where all bytes were not sent with larger files in linux
    (greater than 5 mb or so)
  * Added large file support (> 2gb) for Linux, Win32, and Portable
  * The current handle position will now be ignored in favor of using an offset
    when using the ' variants. There is no guarantee that an input file Handle
    will not be mutated; only a guarantee that sendFile' and unsafeSendFile' do
    not care about the starting position -- they will always start from the
    beginning.
  * The portable implementation is now more reliable and memory-efficient
    thanks to the work done by Bardur Arantsson.
  * The Win32 implementation is more reliable now, as TransmitFile is now called
    with 'foreign import stdcall safe' once again.

  sendfile-0.4
--------------------------------------------------------------------------------
  * FreeBSD support contributed by Maxime Henrion (untested!)
  * sendFile is now unsafeSendFile (continued support for a Handle as the
    output)
  * sendFile' is now unsafeSendFile' (continued support for a Handle as the
    output)
  * sendFile and sendFile' now take a Socket as the output instead of a Handle
    in order to be more semantically correct and typesafe (a Handle used for
    the output which was not created from a Socket will cause runtime errors).
    Thanks to Johan Tibell for this discussion.
  * documentation extended / improved

  sendfile-0.3.1
--------------------------------------------------------------------------------
  * Fixed a bug where Windows would send the whole file with sendFile' if you
    used '0' for count.
  * Converted the foreign calls for windows and linux to 'unsafe' since code
    should be lock-free.
  * Only positive integers are allowed for count now in sendFile' since negative
    is undefined in the portable sense.

  sendfile-0.3
--------------------------------------------------------------------------------
  * The signature for sendFile' has changed
      it was: Handle -> FilePath -> Int -> Int -> IO ()
      now is: Handle -> Handle -> Int -> IO ()
  * This allows you to pass in a handle instead of a FilePath for the infile and
    since you can now directly manipulate the infile handle, there is no need
    for offset (one can use hSeek).
  * Documentation updated / expanded
  * fileSize function removed (didn't belong)
  * Errors are now wrapped in proper errnos (using Foreign.C.Error for nix and
    Win32.Error for win) and give useful messages on exception.
  * The Module Name has been changed to reflect its function:
      it was: SendFile
      now is: Network.Socket.SendFile

  sendfile-0.2
--------------------------------------------------------------------------------
  * added portable offset + bytecount parameters

  sendfile-0.1
--------------------------------------------------------------------------------
  * A library which exposes zero-copy sendfile functionality in a portable way
